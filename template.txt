// UNDER CONSTRUCTION, NOTHING TO SEE HERE
//
// Package ev3 provides a Go interface for LEGO Mindstorms EV3 running ev3dev
// (http://www.ev3dev.org).
// This file is auto-generated for the spec defined at http://github.com/ev3dev/ev3dev-lang, version {{.meta.version}}, revision {{.meta.specRevision}}.
// Supported kernel: {{.meta.supportedKernel}}
package ev3

{{range $t,$v := .classes}} 


{{range .description}}
// {{.|doc}}{{end}}{{with .docsLink}}
// {{.}}{{end}}
type {{$t|camel}} struct{
	{{with $v.inheritance}}{{.|camel}}{{else}}IODevice
	{{end}}
}

func Open{{$t|camel}}(port string) (*{{$t|camel}}, error) {
	{{with $v.inheritance}}
		super, err := Open{{.|camel}}(port)
		if err != nil{return nil, err}
		return &{{$t|camel}}{*super}, nil
	{{else}}
	io, err := OpenIODevice("{{$v.systemClassName}}", "{{$v.systemDeviceNameConvention}}", port)
	if err != nil{
		return nil, err
	}
	return &{{$t|camel}}{IODevice:io}, nil
	{{end}}
}

{{range .systemProperties}}

{{if .writeAccess}}
{{range .description}}
// {{.|doc}}{{end}}
func ({{$t|recv}} *{{$t|camel}}) Set{{.systemName|camel}} (x {{.type|type}}) {
	{{$t|recv}}.write{{.type|suffix}}("{{.systemName}}", x)
}
{{end}}

{{if .readAccess}}
{{range .description}}
// {{.|doc}}{{end}}
func ({{$t|recv}} *{{$t|camel}}) {{.systemName|camel}} () {{.type|type}}{
	return {{$t|recv}}.read{{.type|suffix}}("{{.systemName}}")
}
{{end}}


{{end}}


{{end}}
